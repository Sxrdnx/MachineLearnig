setwd("/media/sxrdnx/Cosas/MachinLearning/dataPreprocessing")
dataset$Salary=ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x,na.rm=TRUE))
,dataset$Salary)
#Aqui los inidices inician en 1
#importamos dataset
dataset=read.csv("Data.csv")
#tartamiento de datos faltantes
dataset$Age=ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x,na.rm=TRUE))
,dataset$Age)
dataset$Salary=ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x,na.rm=TRUE))
,dataset$Salary)
View(dataset)
View(dataset)
dataset$Purchased=factor(dataset$Purchased,
levels=c("No","Yes"),
labels = c(0,1))
View(dataset)
View(dataset)
#Datos categoricos
dataset$Country=factor(dataset$Country,
levels=c("France","Spain","Germany"),
labels = c(1,2,3))
dataset$Purchased=factor(dataset$Purchased,
levels=c("No","Yes"),
labels = c(0,1))
dataset$Purchased=factor(dataset$Purchased,
levels=c("No","Yes"),
labels = c(0,1))
View(dataset)
View(dataset)
#tartamiento de datos faltantes
View(dataset)
#tartamiento de datos faltantes
View(dataset)
View(dataset)
dataset$Purchased=factor(dataset$Purchased,
levels=c("No","Yes"),
labels = c(0,1))
#Aqui los inidices inician en 1
#importamos dataset
dataset=read.csv("Data.csv")
clearPushBack()
clean
clean()
View(dataset)
#Aqui los inidices inician en 1
#importamos dataset
dataset=read.csv("Data.csv")
#tartamiento de datos faltantes
dataset$Age=ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x,na.rm=TRUE))
,dataset$Age)
dataset$Salary=ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x,na.rm=TRUE))
,dataset$Salary)
#Datos categoricos
dataset$Country=factor(dataset$Country,
levels=c("France","Spain","Germany"),
labels = c(1,2,3))
dataset$Purchased=factor(dataset$Purchased,
levels=c("No","Yes"),
labels = c(0,1))
View(dataset)
View(dataset)
install.packages("caTools")
library(caTools)
set.seed(123)
split=sample.split(dataset$Purchased,SplitRatio = 0.8)
training_set=subset(dataset,split==TRUE)
testing_set=subset(dataset,split==FALSE)
View(training_set)
View(training_set)
View(testing_set)
View(testing_set)
training_set=scale(training_set[,2:3])
testing_set=scale(training_set[,2:3])
training_set=scale(training_set[,2:3])
testing_set=scale(testing_set[,2:3])
#Aqui los inidices inician en 1
#importamos dataset
dataset=read.csv("Data.csv")
#tartamiento de datos faltantes
dataset$Age=ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x,na.rm=TRUE))
,dataset$Age)
dataset$Salary=ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x,na.rm=TRUE))
,dataset$Salary)
#Datos categoricos
dataset$Country=factor(dataset$Country,
levels=c("France","Spain","Germany"),
labels = c(1,2,3))
dataset$Purchased=factor(dataset$Purchased,
levels=c("No","Yes"),
labels = c(0,1))
#Divicion del data setn en entrenamiento y test
set.seed(123)
split=sample.split(dataset$Purchased,SplitRatio = 0.8)
training_set=subset(dataset,split==TRUE)
testing_set=subset(dataset,split==FALSE)
View(testing_set)
View(testing_set)
View(training_set)
View(training_set)
training_set=scale(training_set[,2:3])
testing_set=scale(testing_set[,2:3])
training_set[,2:3]=scale(training_set[,2:3])
testing_set[,2:3]=scale(testing_set[,2:3])
#Aqui los inidices inician en 1
#importamos dataset
dataset=read.csv("Data.csv")
#tartamiento de datos faltantes
dataset$Age=ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x,na.rm=TRUE))
,dataset$Age)
dataset$Salary=ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x,na.rm=TRUE))
,dataset$Salary)
#Datos categoricos
dataset$Country=factor(dataset$Country,
levels=c("France","Spain","Germany"),
labels = c(1,2,3))
dataset$Purchased=factor(dataset$Purchased,
levels=c("No","Yes"),
labels = c(0,1))
#Divicion del data setn en entrenamiento y test
set.seed(123)
split=sample.split(dataset$Purchased,SplitRatio = 0.8)
training_set=subset(dataset,split==TRUE)
testing_set=subset(dataset,split==FALSE)
#Escalado de datos
training_set[,2:3]=scale(training_set[,2:3])
testing_set[,2:3]=scale(testing_set[,2:3])
